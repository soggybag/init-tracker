{"version":3,"sources":["actions/index.js","reducers/Entity.js","reducers/PC.js","reducers/Monster.js","reducers/Encounter.js","reducers/everythingReducer.js","reducers/index.js","components/NewEntity.js","components/PlayerListItem.js","components/PlayerList.js","components/AddEncounter.js","components/EncounterItem.js","components/EncountersList.js","components/GenerateEncounter.js","components/MonsterListItem.js","components/MonsterList.js","components/Pane.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["newPlayer","name","init","dex","type","payload","newMonster","Entity","this","roll","PC","playerName","Monster","Encounter","monsters","defaultState","players","encounters","selectedEncounter","initList","random","n","Math","floor","abilityBonus","everythingReducer","state","newState","push","monster","index","map","obj","Object","assign","forEach","entity","bonus","console","log","sort","a","b","combineReducers","tracker","NewEntity","action","title","useState","setName","setDex","setBonus","dispatch","useDispatch","className","onSubmit","e","preventDefault","parseInt","placeholder","value","onChange","target","PlayerListItem","data","PlayerList","list","player","i","key","AddEncounter","newEncounter","EncounterItem","props","selected","count","length","onClick","selectEncounter","EncounterList","useSelector","encounter","GenerateEncounter","MonsterListItem","MonsterList","Pane","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","subscribe","stringify","setItem","saveState","getState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c75c153f.chunk.js","sourcesContent":["export const ADD_PLAYER = 'ADD_PLAYER'\nexport const ADD_MONSTER = 'ADD_MONSTER'\nexport const EDIT_PLAYER = 'EDIT_PLAYER'\nexport const EDIT_MONSTER = 'EDIT_MONSTER'\nexport const NEW_PLAYER = 'NEW_PLAYER'\nexport const NEW_MONSTER = 'NEW_MONSTER'\nexport const SELECT_ENCOUNTER = 'SELECT_ENCOUNTER'\nexport const NEW_ENCOUNTER = 'CREATE_ENCOUNTER_LIST'\nexport const ROLL_INIT = 'ROLL_INIT'\n\nexport const newPlayer = (name, init, dex) => {\n\treturn {\n\t\ttype: NEW_PLAYER,\n\t\tpayload: { name, init, dex }\n\t}\n}\n\nexport const newMonster = (name, init, dex) => {\n\treturn {\n\t\ttype: NEW_MONSTER,\n\t\tpayload: { name, init, dex }\n\t}\n}\n\nexport const newEncounter = (name) => {\n\treturn {\n\t\ttype: NEW_ENCOUNTER, \n\t\tpayload: { name }\n\t}\n}\n\nexport const selectEncounter = (index) => {\n\treturn {\n\t\ttype: SELECT_ENCOUNTER, \n\t\tpayload: { index }\n\t}\n}\n\nexport const addMonster = (monster) => {\n\treturn {\n\t\ttype: ADD_MONSTER,\n\t\tpayload: { monster }\n\t}\n}\n\nexport const rollInit = () => {\n\treturn {\n\t\ttype: ROLL_INIT\n\t}\n}","function random(n = 20) {\n\treturn Math.floor(Math.random() * n) + 1\n}\n\nfunction abilityBonus(n) {\n\treturn Math.floor(n - 10 / 2)\n}\n\nexport default class Entity {\n\tconstructor(name, dex, init, type) {\n\t\tthis.name = name\n\t\tthis.dex = dex \n\t\tthis.init = init\n\t\tthis.type = type\n\t\tthis.roll = 0\n\t}\n}","import Entity from './Entity'\n\nexport default class PC extends Entity {\n\tconstructor(name, dex, init, type, playerName = '-') {\n\t\tsuper(name, dex, init, type)\n\t\t\n\t\tthis.playerName = playerName\n\t}\n}","import Entity from './Entity'\n\nexport default class Monster extends Entity {\n\tconstructor(name, dex, init, type) {\n\t\tsuper(name, dex, init, type)\n\t\tthis.type = 'monster'\n\t}\n}","export default class Encounter {\n\tconstructor(name) {\n\t\tthis.name = name\n\t\tthis.monsters = []\n\t}\n}","import { NEW_ENCOUNTER, NEW_MONSTER, NEW_PLAYER, ADD_MONSTER, SELECT_ENCOUNTER, ROLL_INIT } from '../actions'\nimport PC from './PC'\nimport Monster from './Monster'\nimport Encounter from './Encounter'\n\nconst defaultState = {\n\tplayers: [],\n\tmonsters: [], \n\tencounters: [], \n\tselectedEncounter: null,\n\tinitList: []\n}\n\nfunction random(n = 20) {\n\treturn Math.floor(Math.random() * n) + 1\n}\n\nfunction abilityBonus(n) {\n\treturn Math.floor((n - 10) / 2)\n}\n\nconst everythingReducer = (state = defaultState, { type, payload }) => {\n\tswitch(type) {\n\t\tcase NEW_PLAYER:\n\t\t\tconst newPlayer = new PC(payload.name, payload.dex, payload.init)\n\t\t\treturn { ...state, players: [...state.players, newPlayer] }\n\n\t\tcase NEW_MONSTER: \n\t\t\tconst newMonster = new Monster(payload.name, payload.dex, payload.init)\n\t\t\treturn {...state, monsters: [...state.monsters, newMonster] }\n\n\t\tcase NEW_ENCOUNTER: \n\t\t\treturn {...state, encounters: [...state.encounters, new Encounter(payload.name)] }\n\t\t\n\t\tcase ADD_MONSTER:\n\t\t\tif (state.selectedEncounter === null) { return state }\n\t\t\tconst newState = { ...state, encounters: [...state.encounters] }\n\t\t\tnewState.encounters[state.selectedEncounter].monsters.push(state.monsters[payload.monster])\n\t\t\treturn newState\n\n\t\tcase SELECT_ENCOUNTER:\n\t\t\treturn { ...state, selectedEncounter: payload.index }\n\n\t\tcase ROLL_INIT:\n\t\t\tif (state.selectedEncounter === null) { return state } \n\t\t\tconst initList = [...state.players, ...state.encounters[state.selectedEncounter].monsters].map((obj) => Object.assign({}, obj))\n\t\t\tinitList.forEach((entity) => {\n\t\t\t\tconst roll = random()\n\t\t\t\tconst bonus = abilityBonus(entity.dex)\n\t\t\t\tconst init = entity.init\n\t\t\t\tconsole.log('roll:', roll, 'bonus:', bonus, 'init:', init)\n\t\t\t\tentity.roll = roll + bonus + init\n\t\t\t})\n\t\t\tinitList.sort((a, b) => a.roll > b.roll)\n\t\t\tconsole.log(initList)\n\t\t\treturn {...state, initList}\n\t\n\t\tdefault: \n\t\t\treturn state\n\t}\n}\n\nexport default everythingReducer","import { combineReducers } from 'redux'\nimport everythingReducer from './everythingReducer'\n\nexport default combineReducers({\n\ttracker: everythingReducer\n})\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nexport default function NewEntity({ action, title }) {\n\tconst [ name, setName ] = useState('')\n\tconst [ dex, setDex ] = useState(10)\n\tconst [ bonus, setBonus ] = useState(0)\n\tconst dispatch = useDispatch()\n\n\treturn (\n\t\t<form \n\t\t\tclassName=\"new-entity-form\"\n\t\t\tonSubmit={(e) => {\n\t\t\t\te.preventDefault()\n\t\t\t\tif (name === '') {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tdispatch(action(name, parseInt(dex), parseInt(bonus)))\n\t\t\t\tsetName('')\n\t\t\t\tsetDex(10)\n\t\t\t\tsetBonus(0)\n\t\t\t}}>\n\n\t\t\t<h2>{title}</h2>\n\n\t\t\t<input \n\t\t\t\tclassName=\"\"\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='name'\n\t\t\t\tvalue={name}\n\t\t\t\tonChange={e => setName(e.target.value)}\n\t\t\t/>\n\n\t\t\t<input \n\t\t\t\ttype='number'\n\t\t\t\tplaceholder='Dex'\n\t\t\t\tvalue={dex}\n\t\t\t\tonChange={e => setDex(e.target.value)}\n\t\t\t/>\n\n\t\t\t<input \n\t\t\t\ttype='number'\n\t\t\t\tplaceholder='init bonus'\n\t\t\t\tvalue={bonus}\n\t\t\t\tonChange={e => setBonus(e.target.value)}\n\t\t\t/>\n\t\t\t<button \n\t\t\t\ttype=\"submit\"\n\t\t\t>✚</button>\n\t\t</form>\n\t)\n}","import React from 'react'\n\nexport default function PlayerListItem({ index, data }) {\n\tconst { name, dex, init } = data\n\treturn (\n\t\t<div>\n\t\t\t<span>{index} </span> \n\t\t\t<span>{name} </span> s\n\t\t\t<span>{dex} </span> \n\t\t\t<span>{init}</span>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport PlayerListItem from './PlayerListItem'\n\nexport default function PlayerList({ list }) {\n\t\n\treturn (\n\t\t<div>\n\t\t\t{list.map((player, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<PlayerListItem \n\t\t\t\t\t\tkey={`entity-${i}`} \n\t\t\t\t\t\tindex={i} \n\t\t\t\t\t\tdata={player} \n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { newEncounter } from '../actions'\n\nexport default function AddEncounter({ title }) {\n\tconst [ name, setName ] = useState('')\n\tconst dispatch = useDispatch()\n\n\treturn (\n\t\t<form onSubmit={(e) => {\n\t\t\te.preventDefault()\n\t\t\tif (name === '') {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tdispatch(newEncounter(name))\n\t\t\tsetName('')\n\t\t}}>\n\t\t\t<h2>{title}</h2>\n\t\t\t<input \n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Name\"\n\t\t\t\tvalue={name}\n\t\t\t\tonChange={e => setName(e.target.value)}\n\t\t\t/>\n\t\t\t<button>✚</button>\n\t\t</form>\n\t)\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { selectEncounter } from '../actions'\n\nexport default function EncounterItem(props) {\n\tconst dispatch = useDispatch()\n\tconst { name, monsters, selected, index } = props\n\tconst count = monsters.length\n\treturn (\n\t\t<div \n\t\t\tonClick={() => dispatch(selectEncounter(index))}\n\t\t>{name} ({count}) {selected && '*'}</div>\n\t)\n}\n","import React from 'react'  \nimport { useSelector } from 'react-redux'\nimport EncounterItem from './EncounterItem'\n\nexport default function EncounterList() {\n\tconst encounters = useSelector(state => state.tracker.encounters)\n\tconst selectedEncounter = useSelector(state => state.tracker.selectedEncounter)\n\n\treturn (\n\t\t<div>\n\t\t\t{encounters.map((encounter, i) => {\n\t\t\t\tconst selected = i === selectedEncounter \n\t\t\t\treturn (\n\t\t\t\t\t<EncounterItem \n\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t\tkey={`encounter-${i}`} \n\t\t\t\t\t\tindex={i} \n\t\t\t\t\t\t{ ...encounter }\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { rollInit } from '../actions'\n\nexport default function GenerateEncounter() {\n\tconst dispatch = useDispatch()\n\tconst initList = useSelector(state => state.tracker.initList)\n\n\treturn (\n\t\t<div>\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(rollInit())\n\t\t\t\t}}\n\t\t\t>Generate Encounter</button>\n\t\t\t{initList.length && initList.map((entity, i) => <div key={`entity-${i}`}>{entity.name} {entity.roll}</div>)}\n\t\t</div>\n\t)\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addMonster } from '../actions'\n\n\nexport default function MonsterListItem({ index, data }) {\n\tconst dispatch = useDispatch()\n\tconst { name, dex, init } = data\n\treturn (\n\t\t<div>\n\t\t\t<span>{index} </span> \n\t\t\t<span>{name} </span> \n\t\t\t<span>{dex} </span> \n\t\t\t<span>{init} </span>\n\t\t\t<button\n\t\t\t\tclassName=\"add-to-encounter-button\"\n\t\t\t\tonClick={() => dispatch(addMonster(index, data))}\n\t\t\t>✚</button>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport MonsterListItem from './MonsterListItem'\n\nexport default function MonsterList({ list }) {\n\t\n\treturn (\n\t\t<div>\n\t\t\t{list.map((monster, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MonsterListItem \n\t\t\t\t\t\tkey={`monster-${i}`} \n\t\t\t\t\t\tindex={i} \n\t\t\t\t\t\tdata={monster} \n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux'\nimport NewEntity from './NewEntity'\nimport PlayerList from './PlayerList'\nimport AddEncounter from './AddEncounter'\nimport EncounterList from './EncountersList'\nimport GenerateEncounter from './GenerateEncounter'\nimport MonsterList from './MonsterList'\n\nimport { newPlayer, newMonster } from '../actions'\n\nexport default function Pane() {\n\tconst players = useSelector(state => state.tracker.players)\n\tconst monsters = useSelector(state => state.tracker.monsters)\n\tconst selectedEncounter = useSelector(state => state.tracker.selectedEncounter)\n\tconst encounters = useSelector(state => state.tracker.encounters)\n\tconst encounter = encounters[selectedEncounter]\n\n  return (\n\t\t<div className=\"App\">\n\t\t\t<div>\n\t\t\t\t<NewEntity action={newPlayer} title=\"Add Player\" />\n\t\t\t\t<PlayerList list={players} />\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<NewEntity action={newMonster} title=\"Add Monster\" />\n\t\t\t\t<MonsterList list={monsters} />\n\t\t\t</div>\n\t\t\t\n\t\t\t<div>\n\t\t\t\t<AddEncounter title=\"Add Encounter\" />\n\t\t\t\t<EncounterList /><h3>Current Encounter</h3>\n\t\t\t\t{\n\t\t\t\t\tencounter && <PlayerList list={encounter.monsters} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t\n\t\t\t<div>\n\t\t\t\t<h2>Initiative List</h2>\n\t\t\t\t<GenerateEncounter />\n\t\t\t</div>\n\t\t</div>\n  );\n}\n\n","const INIT_TRACKER_STATE = \"INIT_TRACKER_STATE\"\n\n// Load State\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(INIT_TRACKER_STATE)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch(err) {\n    return undefined\n  }\n}\n\n// Save State\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(INIT_TRACKER_STATE, serializedState)\n  } catch(err) {\n    console.log(\"Error saving data\")\n  }\n}","import React from 'react';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\nimport Pane from './components/Pane'\nimport { loadState, saveState } from './utils'\n\nimport './App.css'\n\nconst persistedState = loadState()\nconst store = createStore(rootReducer, persistedState)\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Pane />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}